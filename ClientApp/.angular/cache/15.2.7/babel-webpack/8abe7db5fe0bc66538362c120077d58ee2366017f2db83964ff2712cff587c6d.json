{"ast":null,"code":"import * as crypto from 'crypto-js'; // Importamos la librería para hashear\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = '/api/auth';\n  }\n  register(user) {\n    // Hasheamos la contraseña antes de enviarla al backend\n    user.passwordHash = crypto.SHA256(user.passwordHash).toString();\n    return this.http.post(`${this.apiUrl}/register`, user);\n  }\n  login(credentials) {\n    // Hasheamos la contraseña antes de enviarla al backend\n    credentials.passwordHash = crypto.SHA256(credentials.passwordHash).toString();\n    return this.http.post(`${this.apiUrl}/login`, credentials);\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAGA,OAAO,KAAKA,MAAM,MAAM,WAAW,CAAC,CAAC;;;AAKrC,OAAM,MAAOC,WAAW;EAGtBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,WAAM,GAAG,WAAW;EAEY;EAExCC,QAAQ,CAACC,IAAS;IAChB;IACAA,IAAI,CAACC,YAAY,GAAGN,MAAM,CAACO,MAAM,CAACF,IAAI,CAACC,YAAY,CAAC,CAACE,QAAQ,EAAE;IAC/D,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAC,GAAG,IAAI,CAACC,MAAM,WAAW,EAAEL,IAAI,CAAC;EACxD;EAEAM,KAAK,CAACC,WAAgB;IACpB;IACAA,WAAW,CAACN,YAAY,GAAGN,MAAM,CAACO,MAAM,CAACK,WAAW,CAACN,YAAY,CAAC,CAACE,QAAQ,EAAE;IAC7E,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAC,GAAG,IAAI,CAACC,MAAM,QAAQ,EAAEE,WAAW,CAAC;EAC5D;;AAfWX,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAY,SAAXZ,WAAW;EAAAa,YAFV;AAAM","names":["crypto","AuthService","constructor","http","register","user","passwordHash","SHA256","toString","post","apiUrl","login","credentials","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\jonat\\OneDrive\\Escritorio\\Proyecto angular\\ProyectoWebAgro\\ClientApp\\src\\app\\services\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport * as crypto from 'crypto-js'; // Importamos la librería para hashear\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private apiUrl = '/api/auth';\n\n  constructor(private http: HttpClient) { }\n\n  register(user: any): Observable<any> {\n    // Hasheamos la contraseña antes de enviarla al backend\n    user.passwordHash = crypto.SHA256(user.passwordHash).toString();\n    return this.http.post(`${this.apiUrl}/register`, user);\n  }\n\n  login(credentials: any): Observable<any> {\n    // Hasheamos la contraseña antes de enviarla al backend\n    credentials.passwordHash = crypto.SHA256(credentials.passwordHash).toString();\n    return this.http.post(`${this.apiUrl}/login`, credentials);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}